<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.csu.chatroom.persistence.MessageMapper">
    <insert id="insertMessage" parameterType="Message" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO message(room_id, content, sender, receiver, create_time)
        VALUES(
        #{roomId},
        #{content},
        #{sender},
        <choose>
            <when test="receiver != null">#{receiver}</when>
            <otherwise>NULL</otherwise>
        </choose>,
        <choose>
            <when test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP}
            </when>
            <otherwise>
                CURRENT_TIMESTAMP
            </otherwise>
        </choose>
        )
    </insert>

    <select id="selectRecentMessages" resultType="Message">
        SELECT
            id,
            room_id as roomId,
            content,
            sender,
            create_time as createTime
        FROM message
        WHERE room_id = #{roomId}
        ORDER BY create_time ASC
            LIMIT #{limit}
    </select>

    <select id="selectByTimeRange" resultType="Message">
        SELECT
            id, room_id as roomId, content,
            sender, create_time as createTime
        FROM message
        WHERE room_id = #{roomId}
          AND create_time BETWEEN #{startTime} AND #{endTime}
        ORDER BY create_time ASC
    </select>

    <select id="getPrivateMessages">
        SELECT
            id,
            content,
            sender,
            receiver,
            create_time as createTime
        FROM message
        WHERE (sender = #{user1} AND receiver = #{user2})
           OR (sender = #{user2} AND receiver = #{user1})
        ORDER BY create_time ASC
            LIMIT #{limit}
    </select>
</mapper>